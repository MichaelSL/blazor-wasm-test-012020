# This is a basic workflow to help you get started with Actions

name: BuildAndUploadImages

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - master
      - feature/**
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  pull_request:
    branches: [ master ]

env:
  DOTNET_NOLOGO: true                     # Disable the .NET logo
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true # Disable the .NET first time experience
  DOTNET_CLI_TELEMETRY_OPTOUT: true       # Disable sending .NET CLI telemetry

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [self-hosted, Linux]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup .NET 7
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 7.0.x
    - name: Set build script eXecutable
      id: builscriptexec
      run: chmod +x ./build.sh
    - name: Build ARM container
      id: armcontainer
      run: ./build.sh -Target PushArmDockerContainer -DockerPrivateRegistry "${{ secrets.DOCKER_REGISTRY }}" -DockerLogin "${{ secrets.DOCKER_REGISTRY_LOGIN }}" -DockerPassword "${{ secrets.DOCKER_REGISTRY_PASSWORD }}"
    - name: Build x64 container
      id: x64container
      run: ./build.sh -Target PushDockerContainer -DockerPrivateRegistry "${{ secrets.DOCKER_REGISTRY }}" -DockerLogin "${{ secrets.DOCKER_REGISTRY_LOGIN }}" -DockerPassword "${{ secrets.DOCKER_REGISTRY_PASSWORD }}"
